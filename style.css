* {
    box-sizing: border-box;
}

:root {
    --dark-blue-rgb:34, 52, 59;
    -blue:rgb(135,206,235);
    --light-blue-rgb:135, 206, 235;
    --lighter-blue-rgb:195, 230, 245;
    --current-player:'⨉';
}

html {
    font-family: 'Roboto', Arial, Helvetica, sans-serif;
    color: rgb(var(--dark-blue-rgb));
}

.wrapper {
    display: grid;
    border: solid 1px;
    grid-template-columns: max-content 1fr;
    height: 100vh;
}

header {
    padding: 40px;
    background-color: rgb(var(--light-blue-rgb));
}
menu {
    padding: 0;
    display: flex;
    flex-direction: column;
    gap:10px;
    text-align: center;
}
label[for='playWithComputer'] {
    display: grid;
    grid-template-columns: repeat(3, max-content);
    gap:10px;
    padding: 5px;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

input {
    width: 0px;
    height: 0px;
    opacity: 0;
}
.checkbox {
    width: 15px;
    height: 15px;
    position: relative;
    border:solid 1px rgba(var(--dark-blue-rgb),.5);
    border-radius: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
}
.checkbox::after {
    content: '✓';
    font-size: 1.5em;
    cursor: pointer;
    opacity: 0;
    transition: .1s;
}
#playWithComputer:checked + .checkbox::after{
    content:'✓';
    opacity: 1;
}

label[for='playerIsO'] {
    display: none;
    cursor: pointer;
    position: relative;
    width: 100%;
}

#playWithComputer:checked + label[for='playerIsO'] {
    display: block !important;
}

label[for='playerIsO'] .xo,
label[for='playerIsO'] .xOrO {
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    width: max-content;
    letter-spacing: 10px;
    margin-top: 30px;
}

.marker {
    font-weight: bold;
}

.xOrO {
    top:-3px;
}

.xOrO::after {
    content: '';
    width: 2.5ch;
    height: 2.5ch;
    border: solid 1px;
    border-radius: 5px;
    position: absolute;
    top:0;
    transition: .2s;
    left: -28px;
}

#playerIsO:checked + .xOrO::after {
    content: '';
    left: -7px;
}

#playerIsO:checked ~ .xo .o {
    opacity: 1;
}
#playerIsO:checked ~ .xo .x {
    opacity: .5;
}
.x {
    opacity: 1;
    transition: .2s;
}
.o {
    opacity: .5;
    transition: .2s;
}

.new-game {
    border:solid 1px rgba(var(--dark-blue-rgb),.5);
    border-radius: 5px;
    padding: 10px;
    background-color: rgb(var(--lighter-blue-rgb));
    cursor: pointer;
    transition: .1s;
}

.new-game:hover {
    transform: scale(1.1);
}

.new-game:active {
    transform: scale(1);
}

main {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap:20px;
}

#turnLabel {
    text-transform: capitalize;
}

.gameboard {
    max-width: 80%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    text-align: center;
    justify-content: center;
    align-items: center;
    gap:10px;
    font-size: 2rem;
    background-color: rgb(var(--light-blue-rgb));
    font-weight: bold;
}

.slot {
    width:5rem;
    height:5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: white;
    transition: .1s;
}

.slot[data-marker = 'null']::before {
    content: var(--current-player);
    opacity: 0;
    transition: .15s;
}
.slot[data-marker = 'null']:hover::before {
    content: var(--current-player);
    opacity: .3;
}

.slot[data-marker = 'x']::before {
    content: '⨉';
}

.slot[data-marker = 'o']::before {
    content: '◯';
}